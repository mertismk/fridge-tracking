stages:
  - test
  - build
  - push
  - deploy

variables:
  DOCKER_REGISTRY: "158.160.5.205:5000"
  DOCKER_IMAGE: "$DOCKER_REGISTRY/fridge_planner"

test:
  stage: test
  image: python:3.9-slim
  tags:
    - docker
    - linux
  script:
    - echo "Установка Python зависимостей..."
    - pip install --no-cache-dir -r requirements.txt
    - echo "Запуск скрипта анализа..."
    - chmod +x scripts/run_analysis.sh
    - ./scripts/run_analysis.sh
  artifacts:
    paths:
      - reports/
    expire_in: 1 week

failing_test:
  stage: test
  image: python:3.9-slim
  tags:
    - docker
    - linux
  script:
    - echo "Установка Python зависимостей..."
    - pip install --no-cache-dir -r requirements.txt
    - echo "Запуск тестов, которые должны провалиться..."
    - export CI=true
    - python -m pytest tests/test_failing.py -v
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^feature\//'
      allow_failure: true
  needs: []

build:
  stage: build
  image: docker:20.10.16
  tags:
    - docker
    - linux
  script:
    - docker build -t $DOCKER_IMAGE:$CI_PIPELINE_IID .
    - docker tag $DOCKER_IMAGE:$CI_PIPELINE_IID $DOCKER_IMAGE:latest
    - docker save -o fridge_planner_image.tar $DOCKER_IMAGE:$CI_PIPELINE_IID $DOCKER_IMAGE:latest
  artifacts:
    paths:
      - fridge_planner_image.tar
    expire_in: 1 hour

push:
  stage: push
  image: docker:20.10.16
  tags:
    - docker
    - linux
  needs:
    - job: build
      artifacts: true
  before_script:
    - docker load -i fridge_planner_image.tar
  script:
    - docker images
    - docker push $DOCKER_IMAGE:$CI_PIPELINE_IID
    - docker push $DOCKER_IMAGE:latest

deploy_stage:
  stage: deploy
  image: alpine:latest
  tags:
    - docker
    - linux
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  before_script:
    - apk add --no-cache openssh-client coreutils
    - mkdir -p ~/.ssh
    - echo "Attempting to decode SSH_PRIVATE_KEY..."
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
    - echo "Checking decoded key (first 5 lines):"
    - head -n 5 ~/.ssh/id_rsa
    - echo "Checking decoded key (last 5 lines):"
    - tail -n 5 ~/.ssh/id_rsa
    - echo "Checking file permissions and size:"
    - ls -l ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh timofey@89.169.142.35 "mkdir -p /home/timofey/fridge_planner"
    - scp docker-compose.yml timofey@89.169.142.35:/home/timofey/fridge_planner/
    - ssh timofey@89.169.142.35 "
        cd /home/timofey/fridge_planner && 
        sed -i 's/mertismk\\/fridge_planner/$DOCKER_REGISTRY\\/fridge_planner:latest/' docker-compose.yml && 
        docker-compose down && 
        docker-compose up -d --force-recreate --pull always"